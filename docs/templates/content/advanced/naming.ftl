# Naming

## Project and version naming

By default, ${solution_name} attempts to derive the name and version of your project using the same methods that the detector
uses to derive dependency information. For example, in a Maven project, the Maven detector will derive the project name
and version from Maven. For projects managed using Git, if ${solution_name} is unable to determine the project name/version
from the package manager, it may be able to determine the project name
and version (branch) from Git.

You can override the project [name](../properties/Configuration/project.md#project-name) and/or [version](../properties/Configuration/project.md#version-name)
using properties.

## Code location (scan) naming

By default, a code location (scan) name generated by a detector is constructed from information that it derives
from the package manager, such as project name and version, sub-project or module if applicable,
and the detector type. Code location names generated by detectors end in `bom`.

A code location name generated by the signature scanner is constructed from the source directory name,
project name, and project version. Code location names generated by the signature scanner end in `scan`.

Optionally, you can add a [prefix](../properties/Configuration/project.md#scan-name-prefix-advanced) to the automatically
generated code location names, or provided a base [name](../properties/Configuration/project.md#scan-name-advanced).
