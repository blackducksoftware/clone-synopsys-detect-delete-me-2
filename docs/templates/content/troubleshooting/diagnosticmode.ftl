# Diagnostic mode

${solution_name}'s diagnostic mode automatically enabled debug logging (where possible), saves all output (logs and inspector files) to a zip file, and notifies you of the location of the zip.

Diagnostic mode properties are:

-d --diagnostic [--detect.diagnostic](../../../properties/configuration/debug/#diagnostic-mode): When enabled, diagnostic mode collects all files generated by ${solution_name} and zips the files using a unique run ID. It includes logs, BDIO files, extraction files, and reports.

-de --diagnosticExtended [--detect.diagnostic.extended](../../../properties/configuration/debug/#diagnostic-mode-extended): When enabled, ${solution_name} collects relevant files such as lock files and build artifacts.

The zip file is created inside the ${solution_name} output directory, and must be provided when support issues are opened.

By default, diagnostic mode only includes files generated by ${solution_name} where extended diagnostics might include files it finds.

Synopsys does not recommend keeping diagnostic mode on, as it disables parts of cleanup such as deleting the generated diagnostic zip file(s); regardless of the ${solution_name} cleanup flag.
While diagnostic can be enabled through properties for consistency, it is generally preferable to use the command line flags to prevent accidentally keeping diagnostic mode on.
If diagnostic mode is accidentally enabled globally (such as using environment variables) the accumulation of diagnostic zips will likely eventually require user intervention as the zips will accumulate.

Diagnostic mode actions:

* Sets the output log level to DEBUG.

* Zips the entire run directory of ${solution_name} which includes:

* All BDIO files created by ${solution_name}.

* Any intermediary files generated by ${solution_name}, such as Gradle inspector output files.

* Includes any additional reports ${solution_name} might make such as dependency counts.

* Additionally extended diagnostics (-de or --detect.diagnostic.extended) may include additional relevant files such as:
    - Npm package locks.
    - vendor.config.
    - C/C++ compilation database.

After running a scan with diagnostic mode, results similar to the following display in your output.

```
2019-03-29 09:32:02 INFO  [main] --- Creating diagnostics zip.
2019-03-29 09:32:02 INFO  [main] --- Diagnostics zip location: C:\detect\blackduck\runs\detect-run-2019-03-29-13-31-50-492.zip
2019-03-29 09:32:03 INFO  [main] --- Diagnostics file created at: C:detect\blackduck\runs\detect-run-2019-03-29-13-31-50-492.zip
2019-03-29 09:32:03 INFO  [main] --- Diagnostic mode has completed.
```
